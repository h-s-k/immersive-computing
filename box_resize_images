import os
import cv2
import numpy as np

# Parameters
folder_path = "box_images"
n = 50  # width resize percentage
m = 50  # height resize percentage

# Initialize lists to store object points and image points
# 3D points in real world space
objpoints = []
# 2D points in image plane
imgpoints = []

# Read images from folder
for filename in os.listdir(folder_path):
    
    #print(filename)
    if filename.endswith(".jpeg"):
        img_path = os.path.join(folder_path, filename)
        img = cv2.imread(img_path)

        # Resize images
        width = int(img.shape[1] * n / 100)
        height = int(img.shape[0] * m / 100)
        dim = (width, height)
        resized_img = cv2.resize(img, dim)

        # Convert to grayscale
        gray = cv2.cvtColor(resized_img, cv2.COLOR_BGR2GRAY)
        print(gray)

        # Display the images
        cv2.imshow("Box Images", resized_img)
        cv2.waitKey(500)

cv2.destroyAllWindows()

# Calibrate camera
ret, mtx, dist, rvecs, tvecs = cv2.calibrateCamera(objpoints, imgpoints, gray.shape[::-1], None, None)

# Print camera intrinsics
print("Camera Matrix: \n", mtx)
print("Distortion Coefficients: \n", dist)